//******************************************************************
//
// Copyright (c) Microsoft Corporation. All rights reserved.
// This code is licensed under the Visual Studio SDK license terms.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//******************************************************************
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
using DslDiagrams = global::Microsoft.VisualStudio.Modeling.Diagrams;

namespace Company.SlideShowDesigner
{
    public partial class PhotoShape : PhotoShapeBase
    {
        /// <summary>
        /// Provide the specific Image for this Shape class
        /// </summary>
        /// 

        public override DslDiagrams.SizeD MaximumSize
        {
            get { return new DslDiagrams.SizeD(2.5, 2.5); }
        }

        public override DslDiagrams.SizeD MinimumSize
        {
            get { return new DslDiagrams.SizeD(1.0, 1.0); }
        }

        public override DslDiagrams.SizeD DefaultSize
        {
            get { return new DslDiagrams.SizeD(2.0, 1.5); }
        }

        public override NodeSides ResizableSides
        {
            get { return NodeSides.All; }
        }

        public override void OnPaintShape(DslDiagrams.DiagramPaintEventArgs e)
        {
            base.OnPaintShape(e);

            if (!string.IsNullOrWhiteSpace(ImagePath))
            {
                System.Drawing.Image image = new System.Drawing.Bitmap(this.ImagePath);
                e.Graphics.DrawImage(image, DslDiagrams.RectangleD.ToRectangleF(this.AbsoluteBounds));
            }

        }

        protected override global::System.Drawing.Image Image
        {
            get
            {
                if (!string.IsNullOrWhiteSpace(ImagePath))
                {
                    return new System.Drawing.Bitmap(this.ImagePath);
                }
                else
                {
                    return base.Image;
                }
            }
        }
    }
}