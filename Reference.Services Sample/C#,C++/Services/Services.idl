/***************************************************************************

Copyright (c) Microsoft Corporation. All rights reserved.
This code is licensed under the Visual Studio SDK license terms.
THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.

***************************************************************************/

import "oaidl.idl";
import "ocidl.idl";
midl_pragma warning (disable : 2015)
import "vsshell.idl";
midl_pragma warning (default : 2015)

//standard dispids
#define DISPID_Name                     (-800)
#define DISPID_Delete                   (-801)
#define DISPID_Object                   (-802)
#define DISPID_Parent                   (-803)
#define DISPID_NewEnum					(-4)
#define DISPID_Value					(0)

[
	object,
	uuid(D0EA6BC6-163A-43bc-BD01-8844B3D56C82),
	oleautomation,
	nonextensible,
	helpstring("ILocalService Sample interface"),
	pointer_default(unique)
]
interface ILocalService : IUnknown
{
	[helpstring("Executes the local service")] HRESULT ExecuteLocalService();
};

// The service is defined as an interface, so that it will show up in the typelib
// and so the __uuidof can be used on it.
// The service is also provided as a define so that the standard SID_ is available in
// C++ as well.
[
	object,
	uuid(0D7D2AB2-7859-4c4f-844A-3F16C334AA12)
]
interface SLocalService : IUnknown
{
};

[
	object,
	uuid(A98A035F-76F5-4405-90D7-7025C4A2C796),
	oleautomation,
	nonextensible,
	helpstring("IGlobalService sample interface"),
	pointer_default(unique)
]
interface IGlobalService : IUnknown
{
	[helpstring("Executes the global service")] HRESULT ExecuteGlobalService();
	[helpstring("Executes the local service")] HRESULT ExecuteLocalServiceThroughGlobalService();
};

// The service is defined as an interface, so that it will show up in the typelib
// and so the __uuidof can be used on it.
// The service is also provided as a define so that the standard SID_ is available in
// C++ as well.
[
	object,
	uuid(94C805A7-DC62-4ff6-A853-D9AA0A44B4EE)
]
interface SGlobalService : IUnknown
{
};

[
	uuid(35ED9364-237E-4d03-9051-D0F374CE0BA2),
	version(1.0),
	helpstring("VSSDK C++ Services Sample 1.0 Type Library")
]
library ServicesLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");
	interface ILocalService;
	interface SLocalService;
	interface IGlobalService;
	interface SGlobalService;
};
